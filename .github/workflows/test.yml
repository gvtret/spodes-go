name: Go CI

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

env:
  GO111MODULE: on
  GOPROXY: https://proxy.golang.org,direct

jobs:
  test:
    strategy:
      matrix:
        go-version: [ '1.23', '1.24' ]
         # os: [ ubuntu-latest, macos-latest, windows-latest ]
        os: [ ubuntu-latest, macos-latest ]
    name: Test (Go ${{ matrix.go-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30  # Добавлен явный таймаут
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Go
      uses: actions/setup-go@v5.5.0
      with:
        go-version: ${{ matrix.go-version }}
        
    - name: Configure environment
      if: runner.os == 'Windows'
      run: |
        go env -w GOPATH="${{ github.workspace }}\go"
        go env -w GOCACHE="${{ github.workspace }}\go-build"
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ${{ runner.os == 'Windows' && format('{0}\go\pkg\mod', github.workspace) || '~/go/pkg/mod' }}
          ${{ runner.os == 'Windows' && format('{0}\go-build', github.workspace) || './.go/pkg/mod' }}
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-
          ${{ runner.os }}-go-
          
    - name: Install dependencies with retry
      shell: bash
      run: |
        # Универсальная реализация для всех ОС
        retry_count=3
        for i in $(seq 1 $retry_count); do
          if go mod download; then
            break
          fi
          if [ $i -lt $retry_count ]; then
            echo "Attempt $i failed, retrying in 15 seconds..."
            sleep 15
          else
            echo "All retry attempts failed"
            exit 1
          fi
        done
        go mod tidy
        go mod verify
        
    - name: Check formatting
      run: |
        diff -u <(echo -n) <(gofmt -d . || true)
        
    - name: Run tests
      run: |
        go test -v -timeout 10m -race -covermode=atomic -coverprofile=coverage.out ./...
        
    - name: Install Coveralls CLI
      run: |
        go install github.com/mattn/goveralls@latest
        
    - name: Upload coverage to Coveralls
      env:
        COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
      run: |
        goveralls -coverprofile=coverage.out -service=github -repotoken=$COVERALLS_TOKEN

